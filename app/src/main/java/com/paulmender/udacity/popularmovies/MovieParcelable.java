/*
 * Copyright (C) 2016 The Android Open Source Project
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 *
 * You may obtain a copy of the License at
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.paulmender.udacity.popularmovies;

import android.os.Parcel;
import android.os.Parcelable;

/**
 * Package: com.paulmender.udacity.popularmovies
 * Project: PopularMovies Stage 1
 * Name: MovieParcelable
 * Purpose: Message container for the movie detail.
 * Author: Paul on 20170927.
 * The Parcelable implementation is based on the references:
 *    - android-custom-arrayadapter-parcelable project
 *    - https://guides.codepath.com/android/using-parcelable
 *    - generated by the Android Parcelable code generator plugin.
 * History:
 *  20171117 Added runtime for Stage 2.
 * */
public class MovieParcelable implements Parcelable {

    public static final int MOVIE_DB_RUNTIME_NOT_SET = -1;

    // Properties
    public int movieId;
    public String title;
    public String releaseDate;
    public String posterPath;
    public String voteAverage;
    public String overview; // plot synopsis
    public int runtime = MOVIE_DB_RUNTIME_NOT_SET;
    private int totalResults;

    @Override
    public int describeContents() {
        return 0;
    }

    /**
     * Note: The read (in.*) and write (dest.*) order of values must match.
     */
    @Override
    public void writeToParcel(Parcel dest, int flags) {
        dest.writeInt(this.movieId);
        dest.writeString(this.title);
        dest.writeString(this.releaseDate);
        dest.writeString(this.posterPath);
        dest.writeString(this.voteAverage);
        dest.writeString(this.overview);
        dest.writeInt(this.runtime);
        dest.writeInt(this.totalResults);
    }

    public MovieParcelable() {
    }

    /**
     * Note: The read (in.*) and write (dest.*) order of values must match.
     */
    private MovieParcelable(Parcel in) {
        this.movieId = in.readInt();
        this.title = in.readString();
        this.releaseDate = in.readString();
        this.posterPath = in.readString();
        this.voteAverage = in.readString();
        this.overview = in.readString();
        this.runtime = in.readInt();
        this.totalResults = in.readInt();
    }

    @SuppressWarnings("unused")
    public static final Parcelable.Creator<MovieParcelable> CREATOR =
            new Parcelable.Creator<MovieParcelable>() {
        @Override
        public MovieParcelable createFromParcel(Parcel source) {
            return new MovieParcelable(source);
        }

        @Override
        public MovieParcelable[] newArray(int size) {
            return new MovieParcelable[size];
        }
    };
}
